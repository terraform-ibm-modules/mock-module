- name: deploy pre playbook
  hosts: localhost
  tasks:
    - name: get running ansible env variables
      set_fact:
        config_crn_token: "{{ lookup('env', 'config_crn_token') }}"
        project_id: "{{ lookup('env', 'project_id') }}"
        config_id: "{{ lookup('env', 'config_id') }}"
        project_url: "{{ lookup('env', 'project_url') }}"
    - name: Get Statefile
      uri:
        url: "{{ project_url }}/v1/projects/{{ project_id }}/configs/{{ config_id }}/retrieve_schematics_statefile"
        method: GET
        headers:
          Authorization: "Bearer {{ config_crn_token }}"
      register: result
    - name: Set Statefile
      set_fact:
        statefile: "{{ result.json | to_json }}"
    - name: Check for old version of landing zone
      ansible.builtin.shell: |
        ADDRESS_LIST=$(echo '{{ statefile }}' | jq -r '.resources[] | select(.type == "ibm_resource_group") | .module')
        LENGTH=$(echo '{{ statefile }}' | jq -r --arg address "${ADDRESS_LIST}" '.resources[] | select((.type == "ibm_resource_group") and (.module == $address)) | .instances | length')

        for (( i=0; i<LENGTH ; i++ )); do
            NAME=$(echo '{{ statefile }}' | jq -r --arg address "${ADDRESS_LIST}" --arg i "${i}" '.resources[] | select((.type == "ibm_resource_group") and (.module == $address)) | .instances[$i | tonumber ] | .attributes.name')
            SOURCE="${ADDRESS_LIST}.ibm_resource_group.resource_group[\"${NAME}-rg\"]"
            DESTINATION="${ADDRESS_LIST}.ibm_resource_group.resource_group[\"${NAME}-resource-group\"]"

            MOVED_PARAMS+=("$SOURCE, $DESTINATION")
            REVERT_PARAMS+=("$DESTINATION, $SOURCE")
        done
        n=0
        while [ "$n" -lt 14 ]; do
            for x in "${!MOVED_PARAMS[@]}"; do
                echo "${MOVED_PARAMS[$x]}"
            done
            for y in "${!REVERT_PARAMS[@]}"; do
                echo "${REVERT_PARAMS[$y]}"
            done
            n=$(( n + 1 ))
        done
      register: move_list
    - name: Initiate Commands List
      set_fact:
        commands: []
    - name: Add new JSON Objects to List
      set_fact:
        commands: "{{ commands +
          [{ 'command': 'state mv',
          'command_params': item,
          'command_name': 'Move' + count|string,
          'command_onerror': 'abort'}] }}"
      loop: "{{ move_list.stdout_lines }}"
      loop_control:
        index_var: count
    - name: Create complete JSON body
      set_fact:
        commands: "{{
          { 'commands': commands ,
          'operation_name': 'workspace Command',
          'description': 'Executing command'}
          }}"
    - name: Run Terraform commands
      uri:
        url: "{{ project_url }}/v1/projects/{{ project_id }}/configs/{{ config_id }}/execute_schematics_commands"
        method: POST
        headers:
          Authorization: "Bearer {{ config_crn_token }}"
          Content-Type: application/json
        body: "{{ commands }}"
        body_format: json
        status_code: [200, 202]
      register: result
